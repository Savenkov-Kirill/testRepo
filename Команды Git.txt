1. git init - превращает папку на пк в папку репозитория
2. git remote add origin - привязывает папку на пк к репозиторию на гитхабе
3. git status - проверка текущего состояния репозитория, информация по нему, является ли данная папка
репозиторием, какие изменения происходили и т.д.
4. git add README.md - она сообщает Git, что вы хотите включить изменения в конкретном файле в следующий коммит
5. git commit -m - позволяет вам создать коммит с сообщением. Вот как это работает:
                   git commit: Эта часть команды начинает процесс создания коммита.
                   -m: Этот флаг указывает, что вы хотите добавить сообщение к коммиту.
                   <message>: Здесь вы можете написать свое сообщение, описывающее, что было изменено в этом коммите.
6. git push origin имя ветки - используется для отправки ваших локальных изменений в удаленный репозиторий ветки master:
                   git push: Эта часть команды запускает процесс отправки изменений в удаленный репозиторий.
                   origin: Это имя удаленного репозитория. В большинстве случаев это имя связано с URL-адресом вашего удаленного
                   репозитория. Вы можете изменить это имя, если у вас есть несколько удаленных репозиториев.
                   master: Это имя ветки, которую вы хотите отправить. В данном случае мы отправляем изменения в ветку master.
7. git clone ссылка - клонирует проект из GitHub
8. git add -A - добавляет все измененные, удаленные и новые файлы в индекс для последующего коммита
9. git branch - проверить ветку
10. git fetch - выкачивает все ветки из git еа ПК
11. git checkout - используется для переключения между ветками, а также для восстановления файлов из репозитория (git checkout имя ветки)
12. git checkout -b - используется для создания новой ветки и переключения на нее (git checkou -b имя ветки)
13. Последовательность действий для загрузки изменений в GIT:
    git add -A
    git commit -m 'update: new line'
    git push origin имя ветки
14. 
